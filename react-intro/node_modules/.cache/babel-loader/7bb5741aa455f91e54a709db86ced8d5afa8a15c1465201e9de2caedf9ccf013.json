{"ast":null,"code":"// animateScroll.js\n\nconst pow = Math.pow;\n\n// The easing function that makes the scroll decelerate over time\nfunction easeOutQuart(x) {\n  return 1 - pow(1 - x, 4);\n}\nexport function animateScroll({\n  targetPosition,\n  initialPosition,\n  duration\n}) {\n  let start;\n  let position;\n  let animationFrame;\n  const requestAnimationFrame = window.requestAnimationFrame;\n  const cancelAnimationFrame = window.cancelAnimationFrame;\n\n  // maximum amount of pixels we can scroll\n  const maxAvailableScroll = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n  const amountOfPixelsToScroll = initialPosition - targetPosition;\n  function step(timestamp) {\n    if (start === undefined) {\n      start = timestamp;\n    }\n    const elapsed = timestamp - start;\n\n    // this just gives us a number between 0 (start) and 1 (end)\n    const relativeProgress = elapsed / duration;\n\n    // ease out that number\n    const easedProgress = easeOutQuart(relativeProgress);\n\n    // calculate new position for every thick of the requesAnimationFrame\n    position = initialPosition - amountOfPixelsToScroll * Math.min(easedProgress, 1);\n\n    // set the scrollbar position\n    window.scrollTo(0, position);\n\n    // Stop when max scroll is reached\n    if (initialPosition !== maxAvailableScroll && window.scrollY === maxAvailableScroll) {\n      cancelAnimationFrame(animationFrame);\n      return;\n    }\n\n    // repeat until the end is reached\n    if (elapsed < duration) {\n      animationFrame = requestAnimationFrame(step);\n    }\n  }\n  animationFrame = requestAnimationFrame(step);\n}","map":{"version":3,"names":["pow","Math","easeOutQuart","x","animateScroll","targetPosition","initialPosition","duration","start","position","animationFrame","requestAnimationFrame","window","cancelAnimationFrame","maxAvailableScroll","document","documentElement","scrollHeight","clientHeight","amountOfPixelsToScroll","step","timestamp","undefined","elapsed","relativeProgress","easedProgress","min","scrollTo","scrollY"],"sources":["C:/Users/piter/OneDrive/Рабочий стол/Учеба/web/project/react-intro/src/animatedScroll.js"],"sourcesContent":["// animateScroll.js\r\n\r\nconst pow = Math.pow;\r\n\r\n// The easing function that makes the scroll decelerate over time\r\nfunction easeOutQuart(x) {\r\n  return 1 - pow(1 - x, 4);\r\n}\r\n\r\nexport function animateScroll({ targetPosition, initialPosition, duration }) {\r\n  let start;\r\n  let position;\r\n  let animationFrame;\r\n\r\n  const requestAnimationFrame = window.requestAnimationFrame;\r\n  const cancelAnimationFrame = window.cancelAnimationFrame;\r\n\r\n  // maximum amount of pixels we can scroll\r\n  const maxAvailableScroll =\r\n    document.documentElement.scrollHeight -\r\n    document.documentElement.clientHeight;\r\n\r\n  const amountOfPixelsToScroll = initialPosition - targetPosition;\r\n\r\n  function step(timestamp) {\r\n    if (start === undefined) {\r\n      start = timestamp;\r\n    }\r\n\r\n    const elapsed = timestamp - start;\r\n\r\n    // this just gives us a number between 0 (start) and 1 (end)\r\n    const relativeProgress = elapsed / duration;\r\n\r\n    // ease out that number\r\n    const easedProgress = easeOutQuart(relativeProgress);\r\n\r\n    // calculate new position for every thick of the requesAnimationFrame\r\n    position =\r\n      initialPosition - amountOfPixelsToScroll * Math.min(easedProgress, 1);\r\n\r\n    // set the scrollbar position\r\n    window.scrollTo(0, position);\r\n\r\n    // Stop when max scroll is reached\r\n    if (\r\n      initialPosition !== maxAvailableScroll &&\r\n      window.scrollY === maxAvailableScroll\r\n    ) {\r\n      cancelAnimationFrame(animationFrame);\r\n      return;\r\n    }\r\n\r\n    // repeat until the end is reached\r\n    if (elapsed < duration) {\r\n      animationFrame = requestAnimationFrame(step);\r\n    }\r\n  }\r\n\r\n  animationFrame = requestAnimationFrame(step);\r\n}\r\n"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,IAAI,CAACD,GAAG;;AAEpB;AACA,SAASE,YAAYA,CAACC,CAAC,EAAE;EACvB,OAAO,CAAC,GAAGH,GAAG,CAAC,CAAC,GAAGG,CAAC,EAAE,CAAC,CAAC;AAC1B;AAEA,OAAO,SAASC,aAAaA,CAAC;EAAEC,cAAc;EAAEC,eAAe;EAAEC;AAAS,CAAC,EAAE;EAC3E,IAAIC,KAAK;EACT,IAAIC,QAAQ;EACZ,IAAIC,cAAc;EAElB,MAAMC,qBAAqB,GAAGC,MAAM,CAACD,qBAAqB;EAC1D,MAAME,oBAAoB,GAAGD,MAAM,CAACC,oBAAoB;;EAExD;EACA,MAAMC,kBAAkB,GACtBC,QAAQ,CAACC,eAAe,CAACC,YAAY,GACrCF,QAAQ,CAACC,eAAe,CAACE,YAAY;EAEvC,MAAMC,sBAAsB,GAAGb,eAAe,GAAGD,cAAc;EAE/D,SAASe,IAAIA,CAACC,SAAS,EAAE;IACvB,IAAIb,KAAK,KAAKc,SAAS,EAAE;MACvBd,KAAK,GAAGa,SAAS;IACnB;IAEA,MAAME,OAAO,GAAGF,SAAS,GAAGb,KAAK;;IAEjC;IACA,MAAMgB,gBAAgB,GAAGD,OAAO,GAAGhB,QAAQ;;IAE3C;IACA,MAAMkB,aAAa,GAAGvB,YAAY,CAACsB,gBAAgB,CAAC;;IAEpD;IACAf,QAAQ,GACNH,eAAe,GAAGa,sBAAsB,GAAGlB,IAAI,CAACyB,GAAG,CAACD,aAAa,EAAE,CAAC,CAAC;;IAEvE;IACAb,MAAM,CAACe,QAAQ,CAAC,CAAC,EAAElB,QAAQ,CAAC;;IAE5B;IACA,IACEH,eAAe,KAAKQ,kBAAkB,IACtCF,MAAM,CAACgB,OAAO,KAAKd,kBAAkB,EACrC;MACAD,oBAAoB,CAACH,cAAc,CAAC;MACpC;IACF;;IAEA;IACA,IAAIa,OAAO,GAAGhB,QAAQ,EAAE;MACtBG,cAAc,GAAGC,qBAAqB,CAACS,IAAI,CAAC;IAC9C;EACF;EAEAV,cAAc,GAAGC,qBAAqB,CAACS,IAAI,CAAC;AAC9C"},"metadata":{},"sourceType":"module","externalDependencies":[]}